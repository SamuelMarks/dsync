name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: CI-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: cargo build & test
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable, "1.70"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"
      - run: cargo build --all-targets
      - run: cargo test

  clippy:
    name: cargo clippy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"
      - run: cargo clippy --all

  test-script:
    name: test-scripts
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"
      - run: bash test/test_all.sh
      - run: git diff --exit-code --stat || exit 1

  # Things that don't need a cache
  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt
      - run: cargo fmt --all -- --check

  release:
    runs-on: ubuntu-latest
    name: release
    needs: [build, clippy, test-script, fmt]
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    permissions:
      contents: write  # for actions/checkout to fetch code and for semantic-release to push commits, release releases and tags
      issues: write # for semantic-release to comment on and close issues
      pull-requests: write # for semantic-release to comment on and close pull requests
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@61680d0e9b02ff86f5648ade99e01be17f0260a4 # v4
        with:
          dry_run: true
          extra_plugins: |
            @semantic-release/git
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/github
            @semantic-release-cargo/semantic-release-cargo
            @commitlint/config-conventional
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
